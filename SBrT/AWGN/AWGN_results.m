clear; close all; clc;

% symbols per mensagem: 16 symbols;

general_Theoretical_error = @(range, M) 2*qfunc(sqrt(2*db2pow(range))*sin(pi/M));

EbN0dB = -10:0.5:15;
 
% 16 símbolos => CR = 4 (8 símbolos em cada constelação) tot: 16 símbolos,
% 2 vetores  (após kronecker => 64 símbolos) 
SISO_AWGN_BPSK = [0.200000000000000	0.222958057395144	0.200000000000000	0.221238938053097	0.161787365177196	0.152941176470588	0.136246786632391	0.126550868486352	0.104663212435233	0.0962962962962963	0.0721357850070721	0.0798722044728435	0.0496592015579357	0.0308788598574822	0.0293178519593614	0.0186428038777032	0.00704906703524534	0.00554649265905383	0.00205170291341814	0.000814942791016071	0.000412425557186928	0.000166701118231101	4.89527058118610e-05	1.55970714938563e-05	3.16149591364007e-06	6.05569690897851e-7	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0   0];

% 16 símbolos => CR = 4 (8 símbolos em cada constelação) tot: 16 símbolos,
% 2 vetores (após kronecker => 64 símbolos) 
SISO_AWGN_QPSK = [0.226373626373626	0.221987315010571	0.224669603524229	0.182481751824818	0.203187250996016	0.178761061946903	0.175257731958763	0.139310344827586	0.131782945736434	0.137466307277628	0.106514994829369	0.105485232067511	0.0733137829912024	0.0656167979002625	0.0418760469011725	0.0323415265200518	0.0304506699147381	0.0233863423760524	0.0196386488609584	0.0158528852251110	0.0106791969243913	0.00685119210742669	0.00590332573499328	0.00368025909023995	0.00204498977505113	0.00110204981265153	0.000673618408643871	0.000362860501908646	0.000170219719614078	0.000114773139412637	4.13980622395027e-05	1.58228913999765e-05	5.8095004387334731331518910156308e-6	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0];

% 9 símbolos => CR = 3 (3 símbolos em cada constelação) 
% 3 vetores (após kronecker => 27 símbolos) 
SISO_AWGN_8PSK = [0.199604743083004	0.203219315895372	0.201612903225806	0.191011235955056	0.164495114006515	0.162118780096308	0.159810126582278	0.132812500000000	0.128662420382166	0.108813928182807	0.106723585912487	0.0722300140252454	0.0672947510094213	0.0462748727441000	0.0541401273885350	0.0331564986737401	0.0274273176083379	0.0188608072425500	0.00997307270370001	0.00854627809588924	0.00734322220590395	0.00359919378059315	0.00221331975830548	0.00162964652966772	0.000791327055472027	0.000527089779202092	0.000283185840707965	0.000111275675471169	5.86833452558330e-05	1.97875215931329e-05	8.7956856252109827176909444776894e-6	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0];

% 8 símbolos => CR = 2 (2 símbolos em cada constelação) 
% 4 vetores (após kronecker => 16 símbolos) 
SISO_AWGN_16PSK = [0.151515151515152	0.150971599402093	0.143661971830986	0.147445255474453	0.144508670520231	0.117305458768873	0.123020706455542	0.125628140703518	0.122891566265060	0.0936329588014981	0.0847457627118644	0.0783699059561129	0.0639386189258312	0.0580046403712297	0.0457038391224863	0.0357393132445690	0.0286368843069874	0.0224215246636771	0.0151607034566404	0.0125691302161890	0.00624531601299026	0.00513663447709061	0.00406834825061025	0.00215238915195867	0.00116970008889721	0.000616264451401385	0.000336831893938373	0.000186218352191045	8.20859012539442e-05	4.35023952418820e-05	1.9028533557906274142451951593585e-5	0   0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0];

% 10 símbolos => CR = 3.2 (2 símbolos em cada constelação)
% 5 vetores (após kronecker => 32 símbolos)
SISO_AWGN_32PSK = [0.130982367758186	0.144927536231884	0.134487350199734	0.142857142857143	0.145299145299145	0.129870129870130	0.108695652173913	0.0943043884220355	0.0787401574803150	0.0765765765765766	0.0523560209424084	0.0500000000000000	0.0334448160535117	0.0284090909090909	0.0209643605870021	0.0176056338028169	0.0120336943441637	0.00651465798045603	0.00429737859905458	0.00261301280376274	0.00126008064516129	0.000678104021156846	0.000295508274231679	0.000168276511964460	6.91845220387295e-05	5.2175727851403527079202754878431e-5	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0];

% 12 símbolos => CR = 5.3 (2 símbolos em cada constelação)
% 6 vetores (após kronecker => 64 símbolos)
SISO_AWGB_64PSK = [];

t = tiledlayout(3,3);
% Scatterploting
title('AWGN M-PSK BER')
nexttile
semilogy(EbN0dB, SISO_AWGN_BPSK, 'Color', 'Red'); 
hold on
semilogy(EbN0dB, general_Theoretical_error(EbN0dB,2), 'Color', 'Blue')
xlabel("Eb/N0");
ylabel("BER");

ylim([1e-5 1e0])
xlim([EbN0dB(1) 25])

legend({'BPSK-LSKF-AWGN', 'Theoretical error for BPSK-AWGN'})
grid on
hold off


nexttile
semilogy(EbN0dB, SISO_AWGN_QPSK, 'Color', 'Red');
hold on
semilogy(EbN0dB, general_Theoretical_error(EbN0dB,4), 'Color', 'Blue')
xlabel("Eb/N0");
ylabel("BER");

ylim([1e-5 1e0])
xlim([EbN0dB(1) 25])

legend({'QPSK-LSKF-AWGN', 'Theoretical error for QPSK-AWGN'})
grid on
hold off


nexttile
semilogy(EbN0dB, SISO_AWGN_8PSK, 'Color', 'Red')
hold on
semilogy(-10:0.5:25, general_Theoretical_error(-10:0.5:25,8), 'Color', 'Blue')
xlabel("Eb/N0");
ylabel("BER");

ylim([1e-4 1e0])
xlim([EbN0dB(1) 25])

legend({'8PSK-LSKF-AWGN', 'Theoretical error for 8PSK-AWGN'})
grid on
hold off


nexttile
semilogy(EbN0dB, SISO_AWGN_16PSK, 'Color', 'Red')
hold on
semilogy(-10:0.5:35, general_Theoretical_error(-10:0.5:35,16), 'Color', 'Blue')
xlabel("Eb/N0");
ylabel("BER");

ylim([1e-4 1e0])
xlim([EbN0dB(1) 25])

legend({'16PSK-LSKF-AWGN', 'Theoretical error for 16PSK-AWGN'})
grid on
hold off

nexttile
semilogy(EbN0dB, SISO_AWGN_32PSK, 'Color', 'Red')
hold on
semilogy(-10:0.5:35, general_Theoretical_error(-10:0.5:35,32), 'Color', 'Blue')
xlabel("Eb/N0");
ylabel("BER");

ylim([1e-4 1e0])
xlim([EbN0dB(1) 35])

legend({'16PSK-LSKF-AWGN', 'Theoretical error for 32PSK-AWGN'})
grid on
hold off


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
figure;
semilogy(-10:0.5:35, general_Theoretical_error(-10:0.5:35,32), 'Color', 'black')
hold on 
semilogy(EbN0dB, SISO_AWGN_BPSK, 'Color', 'red')
semilogy(EbN0dB, SISO_AWGN_QPSK, 'Color', 'cyan')
semilogy(EbN0dB, SISO_AWGN_8PSK, 'Color', 'black')
semilogy(EbN0dB, SISO_AWGN_16PSK, 'Color', 'blue')
semilogy(EbN0dB, SISO_AWGN_32PSK, 'Color', 'green')
grid on

xlabel("Eb/N0");
ylabel("BER");
legend({'Theoretical error for 32PSK-AWGN','BPSK-LSKF-AWGN', 'QPSK-LSKF-AWGN', ...
    '8PSK-LSKF-AWGN', '32PSK-LSKF-AWGN', '32PSK-LSKF-AWGN'})


ylim([1e-4 1e0])
xlim([EbN0dB(1) 35])
hold off
